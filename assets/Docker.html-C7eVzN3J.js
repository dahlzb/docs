import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as t,c as r,a as s,d as e,b as c,e as a}from"./app-CFKGDqLd.js";const o={},d=a(`<h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h2><h3 id="在centos安装" tabindex="-1"><a class="header-anchor" href="#在centos安装"><span>在CentOS安装</span></a></h3><h4 id="卸载旧版本" tabindex="-1"><a class="header-anchor" href="#卸载旧版本"><span>卸载旧版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
                docker-client <span class="token punctuation">\\</span>
                docker-client-latest <span class="token punctuation">\\</span>
                docker-common <span class="token punctuation">\\</span>
                docker-latest <span class="token punctuation">\\</span>
                docker-latest-logrotate <span class="token punctuation">\\</span>
                docker-logrotate <span class="token punctuation">\\</span>
                docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置软件包管理器" tabindex="-1"><a class="header-anchor" href="#设置软件包管理器"><span>设置软件包管理器</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
<span class="token comment"># 设置docker存储库来源为阿里云</span>
<span class="token function">sudo</span> yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="安装docker引擎" tabindex="-1"><a class="header-anchor" href="#安装docker引擎"><span>安装Docker引擎</span></a></h4><p>安装 <code>Docker Engine</code> 、<code>containerd</code> 和 <code>Docker Compose</code></p><h5 id="安装最新版本" tabindex="-1"><a class="header-anchor" href="#安装最新版本"><span>安装最新版本</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="安装指定版本" tabindex="-1"><a class="header-anchor" href="#安装指定版本"><span>安装指定版本</span></a></h5><p>1、列出当前系统可以使用的存储库，按版本好从高到低对结果进行排序。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ yum list docker-ce <span class="token parameter variable">--showduplicates</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-r</span>

docker-ce.x86_64  <span class="token number">3</span>:18.09.1-3.el7                     docker-ce-stable
docker-ce.x86_64  <span class="token number">3</span>:18.09.0-3.el7                     docker-ce-stable
docker-ce.x86_64  <span class="token number">18.06</span>.1.ce-3.el7                    docker-ce-stable
docker-ce.x86_64  <span class="token number">18.06</span>.0.ce-3.el7                    docker-ce-stable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、通过其完整的软件包名称安装特定版本，例如将 <code>&lt;VERSION_STRING&gt;</code> 替换为 <code>18.09.1</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 将 &lt;VERSION_STRING&gt; 替换为所需版本</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce-<span class="token operator">&lt;</span>VERSION_STRING<span class="token operator">&gt;</span> docker-ce-cli-<span class="token operator">&lt;</span>VERSION_STRING<span class="token operator">&gt;</span> containerd.io docker-buildx-plugin docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="启动docker" tabindex="-1"><a class="header-anchor" href="#启动docker"><span>启动docker</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 立即启动Docker服务</span>
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
<span class="token comment"># 设置Docker服务开机启动</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="卸载docker" tabindex="-1"><a class="header-anchor" href="#卸载docker"><span>卸载Docker</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 删除安装包</span>
yum remove docker-ce
<span class="token comment"># 删除镜像、容器、配置文件等内容</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><h4 id="镜像" tabindex="-1"><a class="header-anchor" href="#镜像"><span>镜像</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看本地镜像</span>
<span class="token function">docker</span> images
<span class="token comment"># 搜索远程厂库中的镜像</span>
<span class="token function">docker</span> search redis
<span class="token comment"># 拉取远程厂库中的镜像</span>
<span class="token function">docker</span> pull redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="容器" tabindex="-1"><a class="header-anchor" href="#容器"><span>容器</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 正在运行的容器列表</span>
<span class="token function">docker</span> container <span class="token function">ls</span>
<span class="token comment"># 进入容器</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> a34aff536643 /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="开机启动" tabindex="-1"><a class="header-anchor" href="#开机启动"><span>开机启动</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 设置容器开机启动</span>
<span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always 容器ID
<span class="token comment"># 取消容器开机启动</span>
<span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>no 容器ID 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在docker中安装redis" tabindex="-1"><a class="header-anchor" href="#在docker中安装redis"><span>在Docker中安装Redis</span></a></h3><h4 id="准备redis配置文件" tabindex="-1"><a class="header-anchor" href="#准备redis配置文件"><span>准备Redis配置文件</span></a></h4>`,28),p=s("code",null,"Docker",-1),u=s("code",null,"Redis",-1),m={href:"https://github.com/redis/redis/blob/7.2.4/redis.conf",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,"redis.conf",-1),k=a(`<p>修改以下配置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 注释掉这部分，使redis可以外部访问</span>
<span class="token builtin class-name">bind</span> <span class="token number">127.0</span>.0.1 
<span class="token comment"># 设置redis设置密码</span>
requirepass <span class="token number">123456</span>
<span class="token comment"># redis持久化</span>
appendonly <span class="token function">yes</span>
<span class="token comment"># 关闭连接保护模式，开启保护模式后未设置密码其它主机无法连接</span>
protected-mode no
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在宿主机创建与Docker容器映射的目录，并将 <code>redis.conf</code> 文件放在 <code>conf</code> 目录</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># conf存放配置文件，data存放持久化数据</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/docker/redis/conf /usr/local/docker/redis/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="启动-docker-redis容器" tabindex="-1"><a class="header-anchor" href="#启动-docker-redis容器"><span>启动 Docker Redis容器</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 拉取redis最新版镜像</span>
<span class="token function">docker</span> pull redis
<span class="token comment"># 运行一个 redis 容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> myredis <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token punctuation">\\</span>
           <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
           <span class="token parameter variable">-e</span><span class="token operator">=</span><span class="token string">&#39;TZ=Asia/Shanghai&#39;</span> <span class="token punctuation">\\</span>
           <span class="token parameter variable">-v</span> /usr/local/docker/redis/conf:/usr/local/etc/redis/conf <span class="token punctuation">\\</span>
           <span class="token parameter variable">-v</span> /usr/local/docker/redis/data:/data <span class="token punctuation">\\</span>
           <span class="token parameter variable">-d</span> redis redis-server /usr/local/etc/redis/conf/redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>--name</code>：设置容器名称</p><p><code>-p</code>：宿主机和容器之间的端口映射</p><p><code>-e=&#39;TZ=Asia/Shanghai&#39;</code> ：设置时区为上海</p><p><code>-v /usr/local/docker/redis/conf:/usr/local/etc/redis/conf</code> ：挂载宿主机 <code>/usr/local/docker/redis/conf</code> 目录到容器 <code>usr/local/etc/redis/conf</code>目录</p><p><code>redis-server /usr/local/etc/redis/conf/redis.conf</code> ：指定 <code>redis</code> 服务启动使用的配置文件</p><h4 id="哨兵" tabindex="-1"><a class="header-anchor" href="#哨兵"><span>哨兵</span></a></h4><p>在指定 Redis 版本源码包中找到 <code>sentinel.conf</code> 配置文件，修改以下配置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sentinel monitor myMaster <span class="token number">192.168</span>.208.128 <span class="token number">6379</span> <span class="token number">2</span>
logfile <span class="token string">&quot;/usr/local/etc/redis/sentinel/sentinel.log&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启动一个哨兵</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> myRedisSentinel <span class="token parameter variable">-p</span> <span class="token number">26379</span>:26379 <span class="token punctuation">\\</span>
           <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
           <span class="token parameter variable">-e</span><span class="token operator">=</span><span class="token string">&#39;TZ=Asia/Shanghai&#39;</span> <span class="token punctuation">\\</span>
           <span class="token parameter variable">-v</span> /usr/local/docker/redis/sentinel:/usr/local/etc/redis/sentinel <span class="token punctuation">\\</span>
           <span class="token parameter variable">-d</span> redis redis-sentinel /usr/local/etc/redis/sentinel/sentinel.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙"><span>防火墙</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 开放防火墙指定端口</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">6379</span>/tcp <span class="token parameter variable">--permanent</span>
<span class="token comment"># 重新加载防火墙</span>
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装sqlserver" tabindex="-1"><a class="header-anchor" href="#安装sqlserver"><span>安装SqlServer</span></a></h3>`,19),b={href:"https://learn.microsoft.com/en-us/sql/linux/quickstart-install-connect-docker?view=sql-server-ver16&tabs=cli&pivots=cs1-bash",target:"_blank",rel:"noopener noreferrer"},h=a(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 拉取redis最新版镜像		   </span>
<span class="token function">docker</span> pull mcr.microsoft.com/mssql/server:2022-latest
<span class="token comment"># 创建docker mssql 数据卷存放目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/docker/mssql
<span class="token comment"># 赋予数据卷目录读写权限</span>
<span class="token function">chmod</span> <span class="token number">777</span> /usr/local/docker/mssql
<span class="token comment"># 运行一个容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> mssql <span class="token parameter variable">-p</span> <span class="token number">1433</span>:1433 <span class="token punctuation">\\</span>
           <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
           <span class="token parameter variable">-e</span><span class="token operator">=</span><span class="token string">&#39;TZ=Asia/Shanghai&#39;</span> <span class="token punctuation">\\</span>
           <span class="token parameter variable">-e</span> <span class="token string">&quot;ACCEPT_EULA=Y&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;SA_PASSWORD=sa123456.&quot;</span> <span class="token punctuation">\\</span>
           <span class="token parameter variable">-e</span> <span class="token string">&quot;MSSQL_AGENT_ENABLED=true&quot;</span> <span class="token punctuation">\\</span>
           <span class="token parameter variable">-v</span> /usr/local/docker/mssql:/var/opt/mssql <span class="token punctuation">\\</span>
           <span class="token parameter variable">-d</span> mcr.microsoft.com/mssql/server:2022-latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function g(f,x){const n=l("ExternalLinkIcon");return t(),r("div",null,[d,s("p",null,[e("因为 "),p,e(" 中安装 "),u,e(" 没有配置文件，需要我们先到 "),s("a",m,[e("Redis官网"),c(n)]),e(" 中下载当前安装版本的配置文件 "),v,e(" 。")]),k,s("p",null,[s("a",b,[e("Docker：在 Linux 上安装适用于 SQL Server 的容器 - SQL Server |Microsoft学习"),c(n)])]),h])}const S=i(o,[["render",g],["__file","Docker.html.vue"]]),y=JSON.parse('{"path":"/devops/docker/Docker.html","title":"Docker","lang":"zh-CN","frontmatter":{"title":"Docker","date":"2024-04-12T17:07:05.000Z","description":"Docker 在CentOS安装 卸载旧版本 设置软件包管理器 安装Docker引擎 安装 Docker Engine 、containerd 和 Docker Compose 安装最新版本 安装指定版本 1、列出当前系统可以使用的存储库，按版本好从高到低对结果进行排序。 2、通过其完整的软件包名称安装特定版本，例如将 <VERSION_STRING>...","head":[["meta",{"property":"og:url","content":"https://dahlzb.github.io/docs/devops/docker/Docker.html"}],["meta",{"property":"og:site_name","content":"DahlZb小站"}],["meta",{"property":"og:title","content":"Docker"}],["meta",{"property":"og:description","content":"Docker 在CentOS安装 卸载旧版本 设置软件包管理器 安装Docker引擎 安装 Docker Engine 、containerd 和 Docker Compose 安装最新版本 安装指定版本 1、列出当前系统可以使用的存储库，按版本好从高到低对结果进行排序。 2、通过其完整的软件包名称安装特定版本，例如将 <VERSION_STRING>..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-22T11:57:08.000Z"}],["meta",{"property":"article:author","content":"DahlZb"}],["meta",{"property":"article:published_time","content":"2024-04-12T17:07:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-22T11:57:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-12T17:07:05.000Z\\",\\"dateModified\\":\\"2024-04-22T11:57:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DahlZb\\",\\"url\\":\\"https://github.com/dahlzb\\"}]}"]]},"headers":[{"level":2,"title":"Docker","slug":"docker","link":"#docker","children":[{"level":3,"title":"在CentOS安装","slug":"在centos安装","link":"#在centos安装","children":[]},{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"在Docker中安装Redis","slug":"在docker中安装redis","link":"#在docker中安装redis","children":[]},{"level":3,"title":"安装SqlServer","slug":"安装sqlserver","link":"#安装sqlserver","children":[]}]}],"git":{"createdTime":1713787028000,"updatedTime":1713787028000,"contributors":[{"name":"dahlzb","email":"1304187196@qq.com","commits":1}]},"readingTime":{"minutes":2.93,"words":880},"filePathRelative":"devops/docker/Docker.md","localizedDate":"2024年4月12日","excerpt":"<h2>Docker</h2>\\n<h3>在CentOS安装</h3>\\n<h4>卸载旧版本</h4>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">sudo</span> yum remove <span class=\\"token function\\">docker</span> <span class=\\"token punctuation\\">\\\\</span>\\n                docker-client <span class=\\"token punctuation\\">\\\\</span>\\n                docker-client-latest <span class=\\"token punctuation\\">\\\\</span>\\n                docker-common <span class=\\"token punctuation\\">\\\\</span>\\n                docker-latest <span class=\\"token punctuation\\">\\\\</span>\\n                docker-latest-logrotate <span class=\\"token punctuation\\">\\\\</span>\\n                docker-logrotate <span class=\\"token punctuation\\">\\\\</span>\\n                docker-engine\\n</code></pre></div>","autoDesc":true}');export{S as comp,y as data};
