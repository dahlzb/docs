import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o,c as p,a as n,d as c,b as l,e as a}from"./app-CA9gM_4S.js";const i={},u=a(`<h1 id="entityframework" tabindex="-1"><a class="header-anchor" href="#entityframework"><span>EntityFramework</span></a></h1><h3 id="sql中like关键字结合sqlparameter" tabindex="-1"><a class="header-anchor" href="#sql中like关键字结合sqlparameter"><span>SQL中like关键字结合SqlParameter</span></a></h3><div class="language-C# line-numbers-mode" data-ext="C#" data-title="C#"><pre class="language-C#"><code>sql += &quot;and  t1.CarNum like &#39;%&#39;+@CarNum+&#39;%&#39; &quot;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vim</span> practice_1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-stylus line-numbers-mode" data-ext="styl" data-title="styl"><pre class="language-stylus"><code><span class="token comment">//***vdoing主题-CSS变量***//</span>

<span class="token comment">// 颜色</span>
<span class="token variable-declaration"><span class="token variable">$bannerTextColor</span> <span class="token operator">=</span> <span class="token hexcode">#fff</span> <span class="token comment">// 首页banner区(博客标题区)的文本颜色</span></span>
<span class="token variable-declaration"><span class="token variable">$accentColor</span> <span class="token operator">=</span> <span class="token hexcode">#11A8CD</span></span>
<span class="token variable-declaration"><span class="token variable">$activeColor</span> <span class="token operator">=</span> <span class="token hexcode">#ff5722</span></span>
<span class="token variable-declaration"><span class="token variable">$arrowBgColor</span> <span class="token operator">=</span> <span class="token hexcode">#ccc</span></span>

<span class="token comment">// 布局</span>
<span class="token variable-declaration"><span class="token variable">$navbarHeight</span> <span class="token operator">=</span> <span class="token number">3.6</span><span class="token unit">rem</span></span>
<span class="token variable-declaration"><span class="token variable">$sidebarWidth</span> <span class="token operator">=</span> <span class="token number">18</span><span class="token unit">rem</span></span>
<span class="token variable-declaration"><span class="token variable">$contentWidth</span> <span class="token operator">=</span> <span class="token number">860</span><span class="token unit">px</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="另一个-sqlparametercollection-中已包含-sqlparameter" tabindex="-1"><a class="header-anchor" href="#另一个-sqlparametercollection-中已包含-sqlparameter"><span>另一个 SqlParameterCollection 中已包含 SqlParameter</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> logRecordListSqlParameter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>SqlParameter<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> tableName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">StringBuilder</span> condition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
condition<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot; 1=1 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span>TableName<span class="token punctuation">)</span><span class="token punctuation">)</span> tableName <span class="token operator">=</span> param<span class="token punctuation">.</span>TableName<span class="token punctuation">;</span>
<span class="token keyword">else</span> tableName <span class="token operator">=</span> <span class="token string">&quot;OperationRecords_&quot;</span> <span class="token operator">+</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;yyyyMMdd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrEmpty</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span>AccountName<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    condition<span class="token punctuation">.</span><span class="token function">AppendFormat</span><span class="token punctuation">(</span><span class="token string">@&quot; and AccountName like &#39;%&#39; + @AccountName + &#39;%&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logRecordListSqlParameter<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlParameter</span><span class="token punctuation">(</span><span class="token string">&quot;@AccountName&quot;</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span>AccountName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>param<span class="token punctuation">.</span>BeginTime <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> param<span class="token punctuation">.</span>BeginTime <span class="token operator">!=</span> DateTime<span class="token punctuation">.</span>MinValue<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    condition<span class="token punctuation">.</span><span class="token function">AppendFormat</span><span class="token punctuation">(</span><span class="token string">@&quot; and CreateTime&gt;=@BeginTime &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logRecordListSqlParameter<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlParameter</span><span class="token punctuation">(</span><span class="token string">&quot;@BeginTime&quot;</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span>BeginTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>param<span class="token punctuation">.</span>EndTime <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> param<span class="token punctuation">.</span>EndTime <span class="token operator">!=</span> DateTime<span class="token punctuation">.</span>MinValue<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    condition<span class="token punctuation">.</span><span class="token function">AppendFormat</span><span class="token punctuation">(</span><span class="token string">@&quot; and CreateTime &lt;= @EndTime &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logRecordListSqlParameter<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlParameter</span><span class="token punctuation">(</span><span class="token string">&quot;@EndTime&quot;</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span>EndTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

logRecordListSqlParameter<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlParameter</span><span class="token punctuation">(</span><span class="token string">&quot;@pageIndex&quot;</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span>PageNumber<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
logRecordListSqlParameter<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SqlParameter</span><span class="token punctuation">(</span><span class="token string">&quot;@pageSize&quot;</span><span class="token punctuation">,</span> param<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">LogDatabaseEntities</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LogDatabaseEntities</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_ConnectionString<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> countSql <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">@&quot;select count(*) TotalCount from {0} where {1}&quot;</span><span class="token punctuation">,</span> tableName<span class="token punctuation">,</span> condition<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> logRecordListSql <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">@&quot;WITH temp_row AS (select ROW_NUMBER() over(order by CreateTime desc) as RowNumber, * from {0} WHERE {1}) SELECT OperationRecordId,ApiSysCode,ApiMethodName,ResultCode,LogRecordId,GroupIndex,RemoteIp,SrcSysCode,AccountId,AccountName,CreateTime FROM temp_row WHERE RowNumber &gt; ((@pageIndex - 1) * @pageSize) AND RowNumber &lt;= (@pageIndex * @pageSize)&quot;</span><span class="token punctuation">,</span> tableName<span class="token punctuation">,</span> condition<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    db<span class="token punctuation">.</span>Database<span class="token punctuation">.</span>CommandTimeout <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
    <span class="token comment">// 总数</span>
    <span class="token class-name"><span class="token keyword">var</span></span> totalCount <span class="token operator">=</span> db<span class="token punctuation">.</span>Database<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">SqlQuery</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>countSql<span class="token punctuation">,</span> logRecordListSqlParameter<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ICloneable<span class="token punctuation">)</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> recordList <span class="token operator">=</span> db<span class="token punctuation">.</span>Database<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">SqlQuery</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>OperationRecordDto<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>logRecordListSql<span class="token punctuation">,</span> logRecordListSqlParameter<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ICloneable<span class="token punctuation">)</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="entityframework-dbcontext-如何实例化" tabindex="-1"><a class="header-anchor" href="#entityframework-dbcontext-如何实例化"><span>EntityFramework dbContext 如何实例化</span></a></h3>`,8),r={href:"https://www.programminghunter.com/article/46411814576/",target:"_blank",rel:"noopener noreferrer"},d=a(`<ol><li>DbContext怎么在Asp.mvc中使如何实例化</li></ol><div class="language-C# line-numbers-mode" data-ext="C#" data-title="C#"><pre class="language-C#"><code>public class Repository
{
    //实例化EF容器:有弊端。一个线程里可能会创建多个DbContext
    //DbContext db = new DbContext();

    //改造：保证一个请求线程中只有一份EF容器（你要明白：一个url请求到服务器，IIS就开一个线程去处理）
    protected DbContext GetDbContext
    {
        get
        {
            //向线程缓存中查询，如果返回的是null，则创建，同时存入到这个线程缓存中
            //注意的是线程缓存CallContext，而不是我们熟悉的HttpRuntime.cache。意味着这个DbContext对象在这个线程内能被其他方法共享。
            object efDbContext = CallContext.GetData(&quot;DbContext&quot;);
            if (efDbContext == null)
            {
                efDbContext = new DbContext();
                //存入到这个线程缓存中
                CallContext.SetData(&quot;DbContext&quot;, efDbContext);
            }
            return efDbContext as DbContext;
        }
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>为什么你要using 或dispose掉DbContext</p><p>是担心数据库连接没有释放？还是担心DbContext占用过多资源呢？ 首先担心数据库连接没有释放肯定是多余的，因为DbContext在SaveChanges完成后会释放掉打开的数据库连接。 可以反编译一下SaveChages的源码。 担心DbContext占用过多资源也是多余的，有GC回收。</p></li></ol>`,3);function k(m,v){const s=e("ExternalLinkIcon");return o(),p("div",null,[u,n("p",null,[n("a",r,[c("参考地址"),l(s)])]),d])}const h=t(i,[["render",k],["__file","EntityFramework.html.vue"]]),q=JSON.parse(`{"path":"/backend/dotnet/EntityFramework.html","title":"EntityFramework","lang":"zh-CN","frontmatter":{"title":"EntityFramework","date":"2024-04-12T17:07:05.000Z","description":"EntityFramework SQL中like关键字结合SqlParameter 另一个 SqlParameterCollection 中已包含 SqlParameter EntityFramework dbContext 如何实例化 参考地址 DbContext怎么在Asp.mvc中使如何实例化 为什么你要using 或dispose掉DbCont...","head":[["meta",{"property":"og:url","content":"https://dahlzb.github.io/docs/backend/dotnet/EntityFramework.html"}],["meta",{"property":"og:site_name","content":"DahlZb小站"}],["meta",{"property":"og:title","content":"EntityFramework"}],["meta",{"property":"og:description","content":"EntityFramework SQL中like关键字结合SqlParameter 另一个 SqlParameterCollection 中已包含 SqlParameter EntityFramework dbContext 如何实例化 参考地址 DbContext怎么在Asp.mvc中使如何实例化 为什么你要using 或dispose掉DbCont..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-22T11:57:08.000Z"}],["meta",{"property":"article:author","content":"DahlZb"}],["meta",{"property":"article:published_time","content":"2024-04-12T17:07:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-22T11:57:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"EntityFramework\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-12T17:07:05.000Z\\",\\"dateModified\\":\\"2024-04-22T11:57:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DahlZb\\",\\"url\\":\\"https://github.com/dahlzb\\"}]}"]]},"headers":[{"level":3,"title":"SQL中like关键字结合SqlParameter","slug":"sql中like关键字结合sqlparameter","link":"#sql中like关键字结合sqlparameter","children":[]},{"level":3,"title":"另一个 SqlParameterCollection 中已包含 SqlParameter","slug":"另一个-sqlparametercollection-中已包含-sqlparameter","link":"#另一个-sqlparametercollection-中已包含-sqlparameter","children":[]},{"level":3,"title":"EntityFramework dbContext 如何实例化","slug":"entityframework-dbcontext-如何实例化","link":"#entityframework-dbcontext-如何实例化","children":[]}],"git":{"createdTime":1713787028000,"updatedTime":1713787028000,"contributors":[{"name":"dahlzb","email":"1304187196@qq.com","commits":1}]},"readingTime":{"minutes":1.86,"words":559},"filePathRelative":"backend/dotnet/EntityFramework.md","localizedDate":"2024年4月12日","excerpt":"\\n<h3>SQL中like关键字结合SqlParameter</h3>\\n<div class=\\"language-C#\\" data-ext=\\"C#\\" data-title=\\"C#\\"><pre class=\\"language-C#\\"><code>sql += \\"and  t1.CarNum like '%'+@CarNum+'%' \\";\\n</code></pre></div><div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">vim</span> practice_1.txt\\n</code></pre></div>","autoDesc":true}`);export{h as comp,q as data};
