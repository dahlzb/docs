import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c,a as e,d as a,b as s,e as p}from"./app-CsFgahlN.js";const r={},l=p(`<h2 id="浏览器cookie和samesite" tabindex="-1"><a class="header-anchor" href="#浏览器cookie和samesite"><span>浏览器Cookie和SameSite</span></a></h2><h4 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h4><p>近期第三方网站通过iframe嵌套公司业务页面，出现页面Cookie丢失问题。</p><p>经深入排查，发现新版本的Chrome浏览器（80版本之后）对Cookie的校验更加严格，Cookie的 <code>SameSite</code> 属性默认由 <code>None</code> 变为了 <code>Lax</code>。</p><h4 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h4><p>主要原理就是要在页面请求的 <code>Response Header</code> 的属性 <code>Set-Cookie</code> 后带上 <code>Secure;SameSite=None</code></p><h5 id="一、修改服务器配置" tabindex="-1"><a class="header-anchor" href="#一、修改服务器配置"><span>一、修改服务器配置</span></a></h5><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token comment"># 推荐该方案，已测试</span>
<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server_name</span> www.cat73.org</span><span class="token punctuation">;</span>

    <span class="token directive"><span class="token keyword">ssl_certificate</span> /etc/letsencrypt/live/cat73.org/fullchain.pem</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">ssl_certificate_key</span> /etc/letsencrypt/live/cat73.org/privkey.pem</span><span class="token punctuation">;</span>

    <span class="token directive"><span class="token keyword">ssl_trusted_certificate</span> /etc/letsencrypt/live/cat73.org/chain.pem</span><span class="token punctuation">;</span>

    <span class="token directive"><span class="token keyword">add_header</span> X-XSS-Protection <span class="token string">&quot;1; mode=block&quot;</span></span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">add_header</span> X-Frame-Options SAMEORIGIN</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">add_header</span> Strict-Transport-Security <span class="token string">&quot;max-age=15768000&quot;</span></span><span class="token punctuation">;</span>

    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">root</span> /var/www/html</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token directive"><span class="token keyword">location</span> /api</span> <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">proxy_pass</span> http://localhost:8080</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>
        <span class="token comment"># 在这里设置</span>
        <span class="token directive"><span class="token keyword">proxy_cookie_path</span> / <span class="token string">&quot;/; httponly; secure; SameSite=None&quot;</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h4>`,9),d={href:"https://github.com/mqyqingfeng/Blog/issues/157#",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.jianshu.com/p/aa80ca97f877",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.microsoft.com/zh-cn/aspnet/samesite/system-web-samesite",target:"_blank",rel:"noopener noreferrer"};function u(h,v){const n=o("ExternalLinkIcon");return i(),c("div",null,[l,e("ol",null,[e("li",null,[e("a",d,[a("浏览器系列之 Cookie 和 SameSite 属性"),s(n)])]),e("li",null,[e("a",m,[a("新版本chrome浏览器带来的跨域请求cookie丢失问题"),s(n)])]),e("li",null,[e("a",k,[a("Work with SameSite cookies in ASP.NET"),s(n)])])])])}const _=t(r,[["render",u],["__file","浏览器Cookie和SameSite.html.vue"]]),y=JSON.parse('{"path":"/frontend/%E6%B5%8F%E8%A7%88%E5%99%A8Cookie%E5%92%8CSameSite.html","title":"浏览器Cookie和SameSite","lang":"zh-CN","frontmatter":{"title":"浏览器Cookie和SameSite","date":"2024-04-12T17:07:05.000Z","description":"浏览器Cookie和SameSite 前言 近期第三方网站通过iframe嵌套公司业务页面，出现页面Cookie丢失问题。 经深入排查，发现新版本的Chrome浏览器（80版本之后）对Cookie的校验更加严格，Cookie的 SameSite 属性默认由 None 变为了 Lax。 解决方案 主要原理就是要在页面请求的 Response Header...","head":[["meta",{"property":"og:url","content":"https://dahlzb.github.io/docs/frontend/%E6%B5%8F%E8%A7%88%E5%99%A8Cookie%E5%92%8CSameSite.html"}],["meta",{"property":"og:site_name","content":"DahlZb小站"}],["meta",{"property":"og:title","content":"浏览器Cookie和SameSite"}],["meta",{"property":"og:description","content":"浏览器Cookie和SameSite 前言 近期第三方网站通过iframe嵌套公司业务页面，出现页面Cookie丢失问题。 经深入排查，发现新版本的Chrome浏览器（80版本之后）对Cookie的校验更加严格，Cookie的 SameSite 属性默认由 None 变为了 Lax。 解决方案 主要原理就是要在页面请求的 Response Header..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-22T11:57:08.000Z"}],["meta",{"property":"article:author","content":"DahlZb"}],["meta",{"property":"article:published_time","content":"2024-04-12T17:07:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-22T11:57:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"浏览器Cookie和SameSite\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-12T17:07:05.000Z\\",\\"dateModified\\":\\"2024-04-22T11:57:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DahlZb\\",\\"url\\":\\"https://github.com/dahlzb\\"}]}"]]},"headers":[{"level":2,"title":"浏览器Cookie和SameSite","slug":"浏览器cookie和samesite","link":"#浏览器cookie和samesite","children":[]}],"git":{"createdTime":1713787028000,"updatedTime":1713787028000,"contributors":[{"name":"dahlzb","email":"1304187196@qq.com","commits":1}]},"readingTime":{"minutes":0.86,"words":257},"filePathRelative":"frontend/浏览器Cookie和SameSite.md","localizedDate":"2024年4月12日","excerpt":"<h2>浏览器Cookie和SameSite</h2>\\n<h4>前言</h4>\\n<p>近期第三方网站通过iframe嵌套公司业务页面，出现页面Cookie丢失问题。</p>\\n<p>经深入排查，发现新版本的Chrome浏览器（80版本之后）对Cookie的校验更加严格，Cookie的 <code>SameSite</code> 属性默认由 <code>None</code> 变为了 <code>Lax</code>。</p>\\n<h4>解决方案</h4>\\n<p>主要原理就是要在页面请求的 <code>Response Header</code> 的属性 <code>Set-Cookie</code> 后带上 <code>Secure;SameSite=None</code></p>","autoDesc":true}');export{_ as comp,y as data};
